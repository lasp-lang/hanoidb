Callback info about the plain_fsm behaviour is not available
The pattern 'hanoi2' can never match the type 'bisect'
The call hanoidb_bloom:bitarray_set(I::non_neg_integer(),tuple()) does not have an opaque term of type array:array(_) as 2nd argument
The call hanoidb_bloom:bitarray_get(I::non_neg_integer(),tuple()) does not have an opaque term of type array:array(_) as 2nd argument
Invalid type specification for function hanoidb_bloom:bitarray_set/2. The success typing is (integer(),tuple()) -> array:array(_)
Function bitarray_set/2 has no local return
The call array:get(AI::non_neg_integer(),A::tuple()) does not have an opaque term of type array:array(_) as 2nd argument
Function bitarray_get/2 has no local return
The call array:get(AI::non_neg_integer(),A::tuple()) does not have an opaque term of type array:array(_) as 2nd argument
Guard test hd([]) can never succeed
The call plain_rpc:send_reply('undefined' | pid(),'step_ok') will never return since it differs in the 1st argument from the success typing arguments: ({atom() | pid() | port() | {atom(),atom()},_},any())
Guard test is_binary(BinPage::[any()]) can never succeed
The created fun has no local return
Fun application will fail since Fun :: none() is not a function of arity 2
The pattern <_, _, 'none', _> can never match the type <'undefined' | pid() | #file_descriptor{module::atom() | tuple()},binary(),#node{level::'undefined' | non_neg_integer(),members::<<_:64,_:_*8>> | [any()]},non_neg_integer() | {non_neg_integer(),non_neg_integer()}>
The variable BinDict can never match since previous clauses completely covered the type [any()]
The pattern {'bisect', Binary} can never match the type {'partial',[[[any()] | {binary(),'deleted' | binary() | {'deleted' | binary() | non_neg_integer(),'infinity' | integer()}}] | {binary(),'deleted' | binary() | {'deleted' | binary() | non_neg_integer(),'infinity' | integer()}}],maybe_improper_list(binary() | maybe_improper_list(any(),binary() | []) | byte(),binary() | [])}
Type specification hanoidb_util:crc_encapsulate(iolist()) -> iolist() is a supertype of the success typing: hanoidb_util:crc_encapsulate(nonempty_maybe_improper_list(binary() | maybe_improper_list(any(),binary() | []) | byte(),binary() | [])) -> [<<_:64>> | nonempty_maybe_improper_list(binary() | maybe_improper_list(any(),binary() | []) | byte(),binary() | []) | 255,...]
Invalid type specification for function vbisect:from_gb_tree/1. The success typing is ({integer(),'nil' | {binary(),binary(),'nil' | {binary(),binary(),'nil' | {_,_,_,_},'nil' | {_,_,_,_}},'nil' | {binary(),binary(),'nil' | {_,_,_,_},'nil' | {_,_,_,_}}}}) -> binary()
Type specification vbisect:find(Key::key(),Dict::bindict()) -> {'ok',value()} | 'error' is a supertype of the success typing: vbisect:find(binary(),<<_:64,_:_*8>>) -> 'error' | {'ok',binary()}
Type specification vbisect:find_geq(Key::binary(),Binary::binary()) -> 'none' | {'ok',Key::key(),Value::value()} is a supertype of the success typing: vbisect:find_geq(binary(),<<_:64,_:_*8>>) -> 'none' | {'ok',binary(),binary()}
The call vbisect:from_gb_tree(gb_trees:tree(_,_)) contains an opaque term as 1st argument when a structured term of type {integer(),'nil' | {binary(),binary(),'nil' | {binary(),binary(),'nil' | {_,_,_,_},'nil' | {_,_,_,_}},'nil' | {binary(),binary(),'nil' | {_,_,_,_},'nil' | {_,_,_,_}}}} is expected
Type specification hanoidb_reader:open(Name::string()) -> {'ok',read_file()} | {'error',any()} is a supertype of the success typing: hanoidb_reader:open(string()) -> {'error',atom()} | {'ok',#index{file::pid() | #file_descriptor{module::atom() | tuple()},root::'none' | #node{level::'undefined' | non_neg_integer(),members::[any()]},bloom::'undefined' | {'ebloom',reference()} | {'sbloom',_},name::'undefined' | string(),config::[any()]}}
The pattern {'bisect', Binary} can never match the type {'partial',[[[any()] | {_,_}] | {binary(),'deleted' | binary() | {_,_}}],maybe_improper_list(binary() | maybe_improper_list(any(),binary() | []) | byte(),binary() | [])}
Type specification hanoidb_util:decode_kv_data(binary()) -> kventry() is a supertype of the success typing: hanoidb_util:decode_kv_data(<<_:8,_:_*8>>) -> [[[any()] | {_,_}] | {binary(),'deleted' | binary() | {_,_}}] | {binary(),'deleted' | binary() | {'deleted' | binary() | non_neg_integer(),non_neg_integer()}}
Type specification hanoidb:do_put(key(),value(),expiry(),#state{}) -> {'ok',#state{}} is a supertype of the success typing: hanoidb:do_put(binary(),'deleted' | binary(),'infinity' | non_neg_integer(),#state{top::'undefined' | pid(),nursery::'undefined' | #nursery{log_file::'undefined' | #file_descriptor{module::atom() | tuple()},dir::'undefined' | string(),total_size::integer(),count::integer(),last_sync::{non_neg_integer(),non_neg_integer(),non_neg_integer()},min_level::'undefined' | integer(),max_level::'undefined' | integer(),config::[{atom(),_}],step::integer(),merge_done::integer()},dir::'undefined' | string(),max_level::'undefined' | pos_integer()}) -> {'ok',#state{top::'undefined' | pid(),nursery::'undefined' | #nursery{log_file::'undefined' | #file_descriptor{module::atom() | tuple()},dir::'undefined' | string(),total_size::integer(),count::integer(),last_sync::{non_neg_integer(),non_neg_integer(),non_neg_integer()},min_level::'undefined' | integer(),max_level::'undefined' | integer(),config::[{atom(),_}],step::integer(),merge_done::integer()},dir::'undefined' | string(),max_level::'undefined' | pos_integer()}}
The call hanoidb_bloom:bitarray_set(I::non_neg_integer(),tuple()) does not have an opaque term of type array() as 2nd argument
The call hanoidb_bloom:bitarray_get(I::non_neg_integer(),tuple()) does not have an opaque term of type array() as 2nd argument
The call array:get(AI::non_neg_integer(),A::tuple()) does not have an opaque term of type array() as 2nd argument
The call array:get(AI::non_neg_integer(),A::tuple()) does not have an opaque term of type array() as 2nd argument
Expression produces a value of type ['ok' | 'true'], but this value is unmatched
Expression produces a value of type ['ok' | 'true'], but this value is unmatched
Type specification hanoidb_nursery:add(key(),value(),expiry(),#nursery{},pid()) -> {'ok',#nursery{}} is a supertype of the success typing: hanoidb_nursery:add(binary(),'deleted' | binary(),'infinity' | non_neg_integer(),#nursery{log_file::'undefined' | #file_descriptor{module::atom() | tuple()},dir::'undefined' | string(),total_size::integer(),count::integer(),last_sync::{non_neg_integer(),non_neg_integer(),non_neg_integer()},min_level::'undefined' | integer(),max_level::'undefined' | integer(),config::[{atom(),_}],step::integer(),merge_done::integer()},pid()) -> {'ok',#nursery{log_file::'undefined' | #file_descriptor{module::atom() | tuple()},dir::'undefined' | string(),total_size::integer(),count::integer(),last_sync::{non_neg_integer(),non_neg_integer(),non_neg_integer()},min_level::'undefined' | integer(),max_level::'undefined' | integer(),config::[{atom(),_}],step::integer(),merge_done::integer()}}
Type specification hanoidb_reader:open(Name::string()) -> {'ok',read_file()} | {'error',any()} is a supertype of the success typing: hanoidb_reader:open(string()) -> {'error',atom()} | {'ok',#index{file::'undefined' | pid() | #file_descriptor{module::atom() | tuple()},root::'none' | #node{level::'undefined' | non_neg_integer(),members::binary() | [any()]},name::'undefined' | string()}}
Function merge/3 has no local return
Function from_orddict/1 has no local return
The call vbisect:from_gb_tree(gb_tree()) contains an opaque term as 1st argument when a structured term of type {integer(),'nil' | {binary(),binary(),'nil' | {binary(),binary(),'nil' | {_,_,_,_},'nil' | {_,_,_,_}},'nil' | {binary(),binary(),'nil' | {_,_,_,_},'nil' | {_,_,_,_}}}} is expected
Type specification hanoidb:do_put(key(),value(),expiry(),#state{}) -> {'ok',#state{}} is a supertype of the success typing: hanoidb:do_put(binary(),'deleted' | binary(),'infinity' | non_neg_integer(),#state{top::'undefined' | pid(),nursery::'undefined' | #nursery{log_file::'undefined' | #file_descriptor{module::atom() | tuple()},dir::'undefined' | string(),cache::'undefined' | gb_tree(),total_size::integer(),count::integer(),last_sync::{non_neg_integer(),non_neg_integer(),non_neg_integer()},min_level::'undefined' | integer(),max_level::'undefined' | integer(),config::[{atom(),_}],step::integer(),merge_done::integer()},dir::'undefined' | string(),max_level::'undefined' | pos_integer()}) -> {'ok',#state{top::'undefined' | pid(),nursery::'undefined' | #nursery{log_file::'undefined' | #file_descriptor{module::atom() | tuple()},dir::'undefined' | string(),cache::'undefined' | gb_tree(),total_size::integer(),count::integer(),last_sync::{non_neg_integer(),non_neg_integer(),non_neg_integer()},min_level::'undefined' | integer(),max_level::'undefined' | integer(),config::[{atom(),_}],step::integer(),merge_done::integer()},dir::'undefined' | string(),max_level::'undefined' | pos_integer()}}
Type specification hanoidb_nursery:add(key(),value(),expiry(),#nursery{},pid()) -> {'ok',#nursery{}} is a supertype of the success typing: hanoidb_nursery:add(binary(),'deleted' | binary(),'infinity' | non_neg_integer(),#nursery{log_file::'undefined' | #file_descriptor{module::atom() | tuple()},dir::'undefined' | string(),cache::'undefined' | gb_tree(),total_size::integer(),count::integer(),last_sync::{non_neg_integer(),non_neg_integer(),non_neg_integer()},min_level::'undefined' | integer(),max_level::'undefined' | integer(),config::[{atom(),_}],step::integer(),merge_done::integer()},pid()) -> {'ok',#nursery{log_file::'undefined' | #file_descriptor{module::atom() | tuple()},dir::'undefined' | string(),cache::'undefined' | gb_tree(),total_size::integer(),count::integer(),last_sync::{non_neg_integer(),non_neg_integer(),non_neg_integer()},min_level::'undefined' | integer(),max_level::'undefined' | integer(),config::[{atom(),_}],step::integer(),merge_done::integer()}}
